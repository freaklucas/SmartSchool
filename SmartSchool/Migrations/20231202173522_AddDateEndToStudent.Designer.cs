// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WebAPI.Data;

#nullable disable

namespace SmartSchool.Migrations
{
    [DbContext(typeof(SmartContext))]
    [Migration("20231202173522_AddDateEndToStudent")]
    partial class AddDateEndToStudent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("SmartSchool.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreRequisitId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PreRequisitId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargaHoraria = 0,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CargaHoraria = 0,
                            CourseId = 3,
                            Name = "Matemática",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 3,
                            CargaHoraria = 0,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 4,
                            CargaHoraria = 0,
                            CourseId = 1,
                            Name = "Português",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 5,
                            CargaHoraria = 0,
                            CourseId = 1,
                            Name = "Inglês",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 6,
                            CargaHoraria = 0,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 7,
                            CargaHoraria = 0,
                            CourseId = 3,
                            Name = "Inglês",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 8,
                            CargaHoraria = 0,
                            CourseId = 1,
                            Name = "Programação",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 9,
                            CargaHoraria = 0,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 10,
                            CargaHoraria = 0,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Kent",
                            Name = "Marta",
                            NumberPhone = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            LastName = "Isabela",
                            Name = "Paula",
                            NumberPhone = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            LastName = "Antonia",
                            Name = "Laura",
                            NumberPhone = "55668899"
                        },
                        new
                        {
                            Id = 4,
                            LastName = "Maria",
                            Name = "Luiza",
                            NumberPhone = "6565659"
                        },
                        new
                        {
                            Id = 5,
                            LastName = "Machado",
                            Name = "Lucas",
                            NumberPhone = "565685415"
                        },
                        new
                        {
                            Id = 6,
                            LastName = "Alvares",
                            Name = "Pedro",
                            NumberPhone = "456454545"
                        },
                        new
                        {
                            Id = 7,
                            LastName = "José",
                            Name = "Paulo",
                            NumberPhone = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInit")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourse");
                });

            modelBuilder.Entity("SmartSchool.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInit")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ValueNote")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDisciplines");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6103)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6111)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6112)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6113)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6115)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6117)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6118)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6119)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6121)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6123)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6124)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6125)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6126)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6127)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6128)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6130)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6131)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6133)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6134)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6135)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6136)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6137)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5,
                            DateInit = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(6138)
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registration")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            InitDate = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(5632),
                            LastName = "Oliveira",
                            Name = "Lauro",
                            Registration = 1
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            InitDate = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(5664),
                            LastName = "Soares",
                            Name = "Roberto",
                            Registration = 2
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            InitDate = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(5666),
                            LastName = "Marconi",
                            Name = "Ronaldo",
                            Registration = 3
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            InitDate = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(5667),
                            LastName = "Carvalho",
                            Name = "Rodrigo",
                            Registration = 4
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            InitDate = new DateTime(2023, 12, 2, 14, 35, 21, 828, DateTimeKind.Local).AddTicks(5669),
                            LastName = "Montanha",
                            Name = "Alexandre",
                            Registration = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool.Models.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Models.Discipline", "PreRequisit")
                        .WithMany()
                        .HasForeignKey("PreRequisitId");

                    b.HasOne("SmartSchool.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PreRequisit");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool.Models.StudentCourse", b =>
                {
                    b.HasOne("SmartSchool.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.Models.StudentDiscipline", b =>
                {
                    b.HasOne("SmartSchool.Models.Discipline", "Discipline")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Models.Student", "Student")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.Models.Course", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("SmartSchool.Models.Discipline", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("SmartSchool.Models.Student", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("SmartSchool.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
